package com.angkorteam.pluggable.framework.database.annotation;

import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;

/**
 * @author Socheat KHAUV
 */
@Target({ FIELD })
@Retention(RUNTIME)
@Documented
public @interface Column {

    /**
     * (Optional) The name of the column. Defaults to the property or field
     * name.
     */
    String name();

    /**
     * (Optional) Whether the database column is nullable.
     */
    boolean nullable() default true;

    /**
     * (Optional) Whether the column is included in SQL INSERT statements
     * generated by the persistence provider.
     */
    boolean insertable() default true;

    /**
     * (Optional) Whether the column is included in SQL UPDATE statements
     * generated by the persistence provider.
     */
    boolean updatable() default true;

    /**
     * (Optional) The SQL fragment that is used when generating the DDL for the
     * column.
     * <p>
     * Defaults to the generated SQL to create a column of the inferred type.
     */
    String columnDefinition();

    /**
     * (Optional) The column length. (Applies only if a string-valued column is
     * used.)
     */
    int length() default 255;

    /**
     * (Optional) The precision for a decimal (exact numeric) column. (Applies
     * only if a decimal column is used.) Value must be set by developer if used
     * when generating the DDL for the column.
     */
    int precision() default 0;

    /**
     * (Optional) The scale for a decimal (exact numeric) column. (Applies only
     * if a decimal column is used.)
     */
    int scale() default 0;
}